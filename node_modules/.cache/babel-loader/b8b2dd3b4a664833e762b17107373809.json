{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sj0099/Documents/projects/ResponsiveCarousel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sj0099/Documents/projects/ResponsiveCarousel/src/routes/Dashboard/components/Gallery.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n   background: black;\\n   padding: 6%;\\n   height: 100vh;\\n   overflow: hidden;\\n   \\n   .alice-carousel {\\n    box-sizing: border-box;\\n    position: relative;\\n    width: 90%;\\n    margin: auto;\\n  }\\n   \\n   .alice-carousel__wrapper {\\n    position: relative;\\n    width: 100%;\\n    height: 400px;\\n    box-sizing: border-box;\\n    overflow: hidden;\\n  }\\n   \\n  .alice-carousel__stage-item {\\n    width: 800px;\\n    height: 100%;\\n    position: relative;\\n    display: inline-block;\\n    vertical-align: top;\\n    white-space: normal;\\n    line-height: 0;\\n} \\n   .alice-carousel__play-btn {\\n    display: inline-block;\\n    position: absolute;\\n    top: 75%;\\n    left: 20px;\\n}\\n\\n.alice-carousel__dots {\\n    margin: -14% 0 5px;\\n    text-align: center;\\n    list-style: none;\\n    padding: 0;\\n}\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\nimport styled from \"styled-components\";\nconst ScrollElement = styled.div(_templateObject());\nexport class Gallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentIndex: 0,\n      itemsInSlide: 1,\n      responsive: {\n        0: {\n          items: 3\n        }\n      },\n      happyCategory: []\n    };\n  }\n\n  componentWillMount() {\n    let happyCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${happy}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n    fetch(happyCategoryUrl).then(response => response.json()).then(d => {\n      this.setState({\n        happyCategory: d.data\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          happyCategory = _this$state.happyCategory,\n          responsive = _this$state.responsive;\n    return React.createElement(ScrollElement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(AliceCarousel, {\n      duration: 400,\n      autoPlay: true,\n      startIndex: 0,\n      fadeOutAnimation: true,\n      playButtonEnabled: true,\n      responsive: responsive,\n      autoPlayInterval: 2000,\n      autoPlayDirection: \"ltr\",\n      items: happyCategory.map(gal => React.createElement(\"iframe\", {\n        src: gal.embed_url,\n        height: 200,\n        width: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/sj0099/Documents/projects/ResponsiveCarousel/src/routes/Dashboard/components/Gallery.jsx"],"names":["React","Component","AliceCarousel","styled","ScrollElement","div","Gallery","constructor","props","state","currentIndex","itemsInSlide","responsive","items","happyCategory","componentWillMount","happyCategoryUrl","fetch","then","response","json","d","setState","data","render","map","gal","embed_url"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAO,6CAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,mBAAnB;AA8CA,OAAO,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,CADL;AAETC,MAAAA,YAAY,EAAE,CAFL;AAGTC,MAAAA,UAAU,EAAE;AAAC,WAAG;AAACC,UAAAA,KAAK,EAAE;AAAR;AAAJ,OAHH;AAITC,MAAAA,aAAa,EAAE;AAJN,KAAb;AAMH;;AACDC,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,gBAAgB,GAAG,yFAAvB;AACAC,IAAAA,KAAK,CAACD,gBAAD,CAAL,CAAwBE,IAAxB,CAA6BC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAzC,EAA0DF,IAA1D,CAAgEG,CAAD,IAAO;AAClE,WAAKC,QAAL,CAAc;AACVR,QAAAA,aAAa,EAAEO,CAAC,CAACE;AADP,OAAd;AAGH,KAJD;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAKf,KADpC;AAAA,UACEK,aADF,eACEA,aADF;AAAA,UACiBF,UADjB,eACiBA,UADjB;AAEL,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAE,GADd;AAEI,MAAA,QAAQ,EAAE,IAFd;AAGI,MAAA,UAAU,EAAI,CAHlB;AAII,MAAA,gBAAgB,EAAE,IAJtB;AAKI,MAAA,iBAAiB,EAAE,IALvB;AAMI,MAAA,UAAU,EAAEA,UANhB;AAOI,MAAA,gBAAgB,EAAE,IAPtB;AAQI,MAAA,iBAAiB,EAAC,KARtB;AASI,MAAA,KAAK,EAAEE,aAAa,CAACW,GAAd,CAAkBC,GAAG,IAAI;AAAQ,QAAA,GAAG,EAAEA,GAAG,CAACC,SAAjB;AAA4B,QAAA,MAAM,EAAE,GAApC;AAAyC,QAAA,KAAK,EAAE,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,CATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAeH;;AApCkC","sourcesContent":["import React , {Component} from 'react'\nimport AliceCarousel from 'react-alice-carousel'\nimport 'react-alice-carousel/lib/alice-carousel.css'\nimport styled from \"styled-components\";\n\n\nconst ScrollElement = styled.div`\n   background: black;\n   padding: 6%;\n   height: 100vh;\n   overflow: hidden;\n   \n   .alice-carousel {\n    box-sizing: border-box;\n    position: relative;\n    width: 90%;\n    margin: auto;\n  }\n   \n   .alice-carousel__wrapper {\n    position: relative;\n    width: 100%;\n    height: 400px;\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n   \n  .alice-carousel__stage-item {\n    width: 800px;\n    height: 100%;\n    position: relative;\n    display: inline-block;\n    vertical-align: top;\n    white-space: normal;\n    line-height: 0;\n} \n   .alice-carousel__play-btn {\n    display: inline-block;\n    position: absolute;\n    top: 75%;\n    left: 20px;\n}\n\n.alice-carousel__dots {\n    margin: -14% 0 5px;\n    text-align: center;\n    list-style: none;\n    padding: 0;\n}\n\n`;\n\nexport class Gallery extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentIndex: 0,\n            itemsInSlide: 1,\n            responsive: {0: {items: 3}},\n            happyCategory: [],\n        }\n    }\n    componentWillMount() {\n        let happyCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${happy}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n        fetch(happyCategoryUrl).then(response => response.json()).then((d) => {\n            this.setState({\n                happyCategory: d.data\n            });\n        });\n    }\n\n    render() {\n        const {happyCategory, responsive} = this.state;\n        return (\n            <ScrollElement>\n                <AliceCarousel\n                    duration={400}\n                    autoPlay={true}\n                    startIndex = {0}\n                    fadeOutAnimation={true}\n                    playButtonEnabled={true}\n                    responsive={responsive}\n                    autoPlayInterval={2000}\n                    autoPlayDirection=\"ltr\"\n                    items={happyCategory.map(gal => <iframe src={gal.embed_url} height={200} width={200}/>)}\n                />\n            </ScrollElement>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}
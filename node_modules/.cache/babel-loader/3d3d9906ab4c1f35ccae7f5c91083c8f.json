{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sj0099/Documents/projects/ResponsiveCarousel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sj0099/Documents/projects/ResponsiveCarousel/src/routes/Dashboard/components/Gallery.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n   background: black;\\n   padding: 0% 3%;\\n   overflow: auto;\\n   \\n   .alice-carousel {\\n    box-sizing: border-box;\\n    position: relative;\\n    width: 100%;\\n    margin: auto;\\n  }\\n   \\n   .alice-carousel__wrapper {\\n    position: relative;\\n    width: 100%;\\n    height: 430px;\\n    box-sizing: border-box;\\n    overflow: hidden;\\n  }\\n   \\n  .alice-carousel__stage-item {\\n    width: 350px !important;\\n    height: 100%;\\n    position: relative;\\n    display: inline-block;\\n    vertical-align: top;\\n    white-space: normal;\\n    line-height: 0;\\n} \\n   .alice-carousel__play-btn {\\n    display: inline-block;\\n    position: absolute;\\n    top: 75%;\\n    left: 20px;\\n}\\n\\n.alice-carousel__dots {\\n    margin: -14% 0 5px;\\n    text-align: center;\\n    list-style: none;\\n    padding: 0;\\n}\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\nimport styled from \"styled-components\";\nconst ScrollElement = styled.div(_templateObject());\nexport class Gallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentIndex: 0,\n      itemsInSlide: 1,\n      responsive: {\n        0: {\n          items: 3\n        }\n      },\n      happyCategory: [],\n      sadCategory: [],\n      angryCategory: [],\n      boredCategory: []\n    };\n  }\n\n  componentWillMount() {\n    let happyCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${happy}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n    fetch(happyCategoryUrl).then(response => response.json()).then(d => {\n      this.setState({\n        happyCategory: d.data\n      });\n    });\n    let sadCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${sad}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n    fetch(sadCategoryUrl).then(response => response.json()).then(d => {\n      this.setState({\n        sadCategory: d.data\n      });\n    });\n    let angryCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${angry}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n    fetch(angryCategoryUrl).then(response => response.json()).then(d => {\n      this.setState({\n        angryCategory: d.data\n      });\n    });\n    let boredCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${bored}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n    fetch(boredCategoryUrl).then(response => response.json()).then(d => {\n      this.setState({\n        boredCategory: d.data\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          happyCategory = _this$state.happyCategory,\n          sadCategory = _this$state.sadCategory,\n          angryCategory = _this$state.angryCategory,\n          boredCategory = _this$state.boredCategory,\n          responsive = _this$state.responsive;\n    return React.createElement(ScrollElement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"CATEGORY: HAPPY\"), React.createElement(AliceCarousel, {\n      duration: 400,\n      autoPlay: true,\n      startIndex: 0,\n      fadeOutAnimation: true,\n      playButtonEnabled: true,\n      responsive: responsive,\n      autoPlayInterval: 2000,\n      autoPlayDirection: \"ltr\",\n      autoPlayActionDisabled: true,\n      stopAutoPlayOnHover: false,\n      items: happyCategory.map(gal => React.createElement(\"iframe\", {\n        src: gal.embed_url,\n        height: 250,\n        width: 250,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"CATEGORY: SAD\"), React.createElement(AliceCarousel, {\n      duration: 400,\n      autoPlay: true,\n      startIndex: 0,\n      fadeOutAnimation: true,\n      playButtonEnabled: true,\n      responsive: responsive,\n      autoPlayInterval: 2000,\n      autoPlayDirection: \"ltr\",\n      autoPlayActionDisabled: true,\n      stopAutoPlayOnHover: false,\n      items: sadCategory.map(gal => React.createElement(\"iframe\", {\n        src: gal.embed_url,\n        height: 250,\n        width: 250,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"CATEGORY: ANGRY\"), React.createElement(AliceCarousel, {\n      duration: 50,\n      autoPlay: true,\n      startIndex: 0,\n      fadeOutAnimation: true,\n      playButtonEnabled: true,\n      responsive: responsive,\n      autoPlayInterval: 2000,\n      autoPlayDirection: \"ltr\",\n      autoPlayActionDisabled: true,\n      stopAutoPlayOnHover: false,\n      items: angryCategory.map(gal => React.createElement(\"iframe\", {\n        src: gal.embed_url,\n        height: 250,\n        width: 250,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"CATEGORY: BORED\"), React.createElement(AliceCarousel, {\n      duration: 400,\n      autoPlay: true,\n      startIndex: 0,\n      fadeOutAnimation: true,\n      playButtonEnabled: true,\n      responsive: responsive,\n      autoPlayInterval: 2000,\n      autoPlayDirection: \"ltr\",\n      autoPlayActionDisabled: true,\n      stopAutoPlayOnHover: false,\n      items: boredCategory.map(gal => React.createElement(\"iframe\", {\n        src: gal.embed_url,\n        height: 250,\n        width: 250,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/sj0099/Documents/projects/ResponsiveCarousel/src/routes/Dashboard/components/Gallery.jsx"],"names":["React","Component","AliceCarousel","styled","ScrollElement","div","Gallery","constructor","props","state","currentIndex","itemsInSlide","responsive","items","happyCategory","sadCategory","angryCategory","boredCategory","componentWillMount","happyCategoryUrl","fetch","then","response","json","d","setState","data","sadCategoryUrl","angryCategoryUrl","boredCategoryUrl","render","color","map","gal","embed_url"],"mappings":"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","sourcesContent":["import React , {Component} from 'react'\nimport AliceCarousel from 'react-alice-carousel'\nimport 'react-alice-carousel/lib/alice-carousel.css'\nimport styled from \"styled-components\";\n\n\nconst ScrollElement = styled.div`\n   background: black;\n   padding: 0% 3%;\n   overflow: auto;\n   \n   .alice-carousel {\n    box-sizing: border-box;\n    position: relative;\n    width: 100%;\n    margin: auto;\n  }\n   \n   .alice-carousel__wrapper {\n    position: relative;\n    width: 100%;\n    height: 430px;\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n   \n  .alice-carousel__stage-item {\n    width: 350px !important;\n    height: 100%;\n    position: relative;\n    display: inline-block;\n    vertical-align: top;\n    white-space: normal;\n    line-height: 0;\n} \n   .alice-carousel__play-btn {\n    display: inline-block;\n    position: absolute;\n    top: 75%;\n    left: 20px;\n}\n\n.alice-carousel__dots {\n    margin: -14% 0 5px;\n    text-align: center;\n    list-style: none;\n    padding: 0;\n}\n\n`;\n\nexport class Gallery extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentIndex: 0,\n            itemsInSlide: 1,\n            responsive: {0: {items: 3}},\n            happyCategory: [],\n            sadCategory: [],\n            angryCategory: [],\n            boredCategory: [],\n        }\n    }\n    componentWillMount() {\n        let happyCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${happy}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n        fetch(happyCategoryUrl).then(response => response.json()).then((d) => {\n            this.setState({\n                happyCategory: d.data\n            });\n        });\n        let sadCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${sad}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n        fetch(sadCategoryUrl).then(response => response.json()).then((d) => {\n            this.setState({\n                sadCategory: d.data\n            });\n        });\n        let angryCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${angry}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n        fetch(angryCategoryUrl).then(response => response.json()).then((d) => {\n            this.setState({\n                angryCategory: d.data\n            });\n        });\n        let boredCategoryUrl = 'http://api.giphy.com/v1/gifs/search?q=${bored}&api_key=IrmohbMKzmTvBaN5pvQXzuXhC4zEIy8P';\n        fetch(boredCategoryUrl).then(response => response.json()).then((d) => {\n            this.setState({\n                boredCategory: d.data\n            });\n        });\n    }\n\n    render() {\n        const {happyCategory,sadCategory,angryCategory,boredCategory, responsive} = this.state;\n        return (\n            <ScrollElement>\n                <div>\n                <h3 style={{color: 'white'}}>CATEGORY: HAPPY</h3>\n                <AliceCarousel\n                    duration={400}\n                    autoPlay={true}\n                    startIndex = {0}\n                    fadeOutAnimation={true}\n                    playButtonEnabled={true}\n                    responsive={responsive}\n                    autoPlayInterval={2000}\n                    autoPlayDirection=\"ltr\"\n                    autoPlayActionDisabled={true}\n                    stopAutoPlayOnHover={false}\n                    items={happyCategory.map(gal => <iframe src={gal.embed_url} height={250} width={250}/>)}\n                />\n                </div>\n                <div>\n                    <h3 style={{color: 'white'}}>CATEGORY: SAD</h3>\n                    <AliceCarousel\n                        duration={400}\n                        autoPlay={true}\n                        startIndex = {0}\n                        fadeOutAnimation={true}\n                        playButtonEnabled={true}\n                        responsive={responsive}\n                        autoPlayInterval={2000}\n                        autoPlayDirection=\"ltr\"\n                        autoPlayActionDisabled={true}\n                        stopAutoPlayOnHover={false}\n                        items={sadCategory.map(gal => <iframe src={gal.embed_url} height={250} width={250}/>)}\n                    />\n                </div>\n                <div>\n                    <h3 style={{color: 'white'}}>CATEGORY: ANGRY</h3>\n                    <AliceCarousel\n                        duration={50}\n                        autoPlay={true}\n                        startIndex = {0}\n                        fadeOutAnimation={true}\n                        playButtonEnabled={true}\n                        responsive={responsive}\n                        autoPlayInterval={2000}\n                        autoPlayDirection=\"ltr\"\n                        autoPlayActionDisabled={true}\n                        stopAutoPlayOnHover={false}\n                        items={angryCategory.map(gal => <iframe src={gal.embed_url} height={250} width={250}/>)}\n                    />\n                </div>\n                <div>\n                    <h3 style={{color: 'white'}}>CATEGORY: BORED</h3>\n                    <AliceCarousel\n                        duration={400}\n                        autoPlay={true}\n                        startIndex = {0}\n                        fadeOutAnimation={true}\n                        playButtonEnabled={true}\n                        responsive={responsive}\n                        autoPlayInterval={2000}\n                        autoPlayDirection=\"ltr\"\n                        autoPlayActionDisabled={true}\n                        stopAutoPlayOnHover={false}\n                        items={boredCategory.map(gal => <iframe src={gal.embed_url} height={250} width={250}/>)}\n                    />\n                </div>\n            </ScrollElement>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}